pbc_submit_cycle$submit_year <- year(pbc_submit_cycle$week_date)
# Replacing NAs
pbc_submit_cycle$count[is.na(pbc_submit_cycle$count)] <- 0
pbc_submit_cycle$Delisted[is.na(pbc_submit_cycle$Delisted)] <- 0
pbc_submit_cycle$Sand[is.na(pbc_submit_cycle$Sand)] <- 0
summary(pbc_submit_cycle$count)
summary(pbc_submit_cycle$Delisted)
summary(pbc_submit_cycle$Sand)
# Restricting to 2015 onwards
pbc_submit_cycle <- pbc_submit_cycle %>% filter(submit_year %in% c(2015:2024))
pbc_submit_cycle <- left_join(pbc_submit_cycle,next_elec,by="state_elec")
pbc_submit_cycle$next_elec <- ymd(pbc_submit_cycle$next_elec)
pbc_submit_cycle$check <- as.duration(pbc_submit_cycle$next_elec - pbc_submit_cycle$week_date)/dweeks(1)
pbc_submit_cycle$check[is.na(pbc_submit_cycle$check)] <- 0
pbc_submit_cycle <- pbc_submit_cycle %>% filter(check>=0)
pbc_submit_cycle$tau <- pbc_submit_cycle$pbc_submit_week
summary(pbc_submit_cycle$tau)
pbc_submit_cycle$tausq <- (pbc_submit_cycle$tau)^2
#write.csv(submit_cycle,paste0("C:/Users/",user,"/Desktop/submit.csv"))
ec$pbc_grant_week1 <- as.duration(ec$grant - ec$res1)/dweeks(1)
ec$pbc_grant_week2 <- as.duration(ec$grant - ec$res2)/dweeks(1)
ec$pbc_grant_week3 <- as.duration(ec$grant - ec$res3)/dweeks(1)
#Identifying closest election
ec <- ec %>% mutate(pbc_grant_week = case_when(inrange(pbc_grant_week1,0,270) ~ pbc_grant_week1, inrange(pbc_grant_week2,0,270) ~ pbc_grant_week2, inrange(pbc_grant_week3,0,270) ~ pbc_grant_week3))
summary(ec$pbc_grant_week)
#Round off week
ec$pbc_grant_week <- round(ec$pbc_grant_week,0)
##Adding election year for the closest delta
ec <- ec %>% mutate(elec_date = case_when(inrange(pbc_grant_week1,0,270) ~ as.Date(res1), inrange(pbc_grant_week2,0,270) ~ as.Date(res2), inrange(pbc_grant_week3,0,270) ~ as.Date(res3)))
##State election
ec$state_elec <- paste0(ec$state1,'.',year(ec$elec_date))
pbc_grant_n_subset <- ec %>% filter(Category_Simplified != 'Other') %>%  group_by(state1,pbc_grant_week,state_elec,Category_Simplified) %>% summarise(count=n(),Delisted=sum(Delisted),Sand=sum(Sand)) %>% rename(state=state1,Category=Category_Simplified)
all_weeks = 0:270  # Replace with your actual range of years
#all_states = unique(ec$state1) # Replace with your actual list of states
all_elec <- unique(pbc_grant_n_subset$state_elec)
all_cat <- unique(pbc_grant_n_subset$Category)
pbc_grant_n_cycle <- expand.grid(pbc_grant_week = all_weeks, state_elec = all_elec,Category = all_cat)
pbc_grant_n_cycle <- left_join(pbc_grant_n_cycle,pbc_grant_n_subset,by=c("pbc_grant_week","state_elec","Category"))
elec_date <- ec %>% select(state_elec,elec_date) %>% distinct()
pbc_grant_n_cycle <- left_join(pbc_grant_n_cycle,elec_date,by=c("state_elec"))
#State
pbc_grant_n_cycle$state <- sub("\\..*$", "", pbc_grant_n_cycle$state_elec)
# Calculate new dates by adding weeks
pbc_grant_n_cycle$week_date <- pbc_grant_n_cycle$elec_date + weeks(pbc_grant_n_cycle$pbc_grant_week)
# Extract the year from the new dates
pbc_grant_n_cycle$grant_year <- year(pbc_grant_n_cycle$week_date)
#Replacing NAs
pbc_grant_n_cycle$count[is.na(pbc_grant_n_cycle$count)] <- 0
pbc_grant_n_cycle$Delisted[is.na(pbc_grant_n_cycle$Delisted)] <- 0
pbc_grant_n_cycle$Sand[is.na(pbc_grant_n_cycle$Sand)] <- 0
pbc_grant_n_cycle$tau <- pbc_grant_n_cycle$pbc_grant_week
summary(pbc_grant_n_cycle$tau)
pbc_grant_n_cycle$tausq <- abs(pbc_grant_n_cycle$tau)^2
pbc_grant_n_cycle <- pbc_grant_n_cycle %>% filter(grant_year %in% c(2015:2024))
pbc_grant_n_cycle <- left_join(pbc_grant_n_cycle,next_elec,by="state_elec")
pbc_grant_n_cycle$next_elec <- ymd(pbc_grant_n_cycle$next_elec)
pbc_grant_n_cycle$check <- as.duration(pbc_grant_n_cycle$next_elec - pbc_grant_n_cycle$week_date)/dweeks(1)
pbc_grant_n_cycle$check[is.na(pbc_grant_n_cycle$check)] <- 0
pbc_grant_n_cycle <- pbc_grant_n_cycle %>% filter(check>=0)
pbc_submit_cycle$grant_date <- pbc_submit_cycle$week_date + 90
merge_submit <- pbc_submit_cycle %>% select(state_elec,grant_date,Category,count) %>% rename(count_submit = count)
View(merge_submit)
pbc_grant_n_cycle$grant_date <- pbc_grant_n_cycle$week_date
#pbc_grant_n_cycle <- left_join(pbc_grant_n_cycle,merge_submit,by=c("state_elec","grant_date","Category"))
test <- left_join(pbc_grant_n_cycle,merge_submit,by=c("state_elec","grant_date","Category"))
View(test)
table(unique(pbc_submit_cycle$state_elec) %in% unique(pbc_grant_n_cycle$state_elec))
table(unique(pbc_submit_cycle$grant_date) %in% unique(pbc_grant_n_cycle$grant_date))
pbc_grant_n_cycle$code <- interaction(pbc_grant_n_cycle$state_elec,pbc_grant_n_cycle$Category,pbc_grant_n_cycle$grant_date)
View(pbc_grant_n_cycle)
merge_submit$code <- interaction(merge_submit$state_elec,merge_submit$Category,merge_submit$grant_date)
View(test)
#pbc_grant_n_cycle <- left_join(pbc_grant_n_cycle,merge_submit,by=c("state_elec","grant_date","Category"))
#test <- left_join(pbc_grant_n_cycle,merge_submit,by=c("state_elec","grant_date","Category"))
test <- left_join(pbc_grant_n_cycle,merge_submit,by=c("code"))
View(test)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(data.table)
library(sf)
library(tidyverse)
library(cowplot)
library(patchwork)
library(lfe)
library(expss)
library(lubridate)
library(zoo)
library(data.table)
#user <- "agnihotri"
user <- "prana"
#user <- "hp"
#ec<-read.csv(paste0("C:/Users/",user,"/Dropbox/agnihotri_gupta/Environment_Clearance/EC_All_States.csv"),
#             stringsAsFactors = F)
ec<-readRDS(paste0("C:/Users/",user,"/Dropbox/agnihotri_gupta/Environment_Clearance/EC_All_States.rds"))
next_elec <- read.csv(paste0("C:/Users/",user,"/Dropbox/agnihotri_gupta/Environment_Clearance/next_elec.csv"))
#submit_subset <- ec %>% filter(Category_Simplified=='Non-Coal Mining') %>% filter(inrange(submit_week,-100,100)==T) %>% group_by(state1,submit_week,state_elec) %>% summarise(count=n(), delisted=sum(Delisted)) %>% rename(state=state1)
submit_subset <- ec %>% filter(inrange(submit_week,-100,100)==T & Category_Simplified != "Other") %>% group_by(state1,submit_week,state_elec,Category_Simplified) %>% summarise(count=n(), delisted=sum(Delisted)) %>% rename(state=state1,Category=Category_Simplified)
submit_subset<-submit_subset%>%mutate(delisted_percent=delisted/count)
all_weeks = -100:100  # Replace with your actual range of years
all_elec <- unique(submit_subset$state_elec)
all_cat <- unique(submit_subset$Category)
submit_cycle <- expand.grid(submit_week = all_weeks, state_elec = all_elec,Category=all_cat)
submit_cycle <- left_join(submit_cycle,submit_subset,by=c("submit_week","state_elec","Category"))
elec_date <- ec %>% select(state_elec,elec_date) %>% distinct()
submit_cycle <- left_join(submit_cycle,elec_date,by=c("state_elec"))
#State
submit_cycle$state <- sub("\\..*$", "", submit_cycle$state_elec)
# Calculate new dates by adding weeks
submit_cycle$week_date <- submit_cycle$elec_date + weeks(submit_cycle$submit_week)
# Extract the year from the new dates
submit_cycle$submit_year <- year(submit_cycle$week_date)
# Replacing NAs
submit_cycle$count[is.na(submit_cycle$count)] <- 0
summary(submit_cycle$count)
submit_cycle$delisted[is.na(submit_cycle$delisted)] <- 0
summary(submit_cycle$delisted)
submit_cycle$delisted_percent[is.na(submit_cycle$delisted_percent)] <- 0
summary(submit_cycle$delisted_percent)
# Restricting to 2015 onwards
submit_cycle <- submit_cycle %>% filter(submit_year %in% c(2015:2023))
submit_cycle$tau <- abs(submit_cycle$submit_week+100)
summary(submit_cycle$tau)
submit_cycle$tausq <- abs(submit_cycle$tau)^2
grant_n_subset <- ec %>% filter(inrange(grant_week,-100,100)==T & Category_Simplified != "Other") %>% group_by(state1,grant_week,state_elec,Category_Simplified) %>% summarise(count=n()) %>% rename(state=state1,Category=Category_Simplified)
all_weeks = -100:100  # Replace with your actual range of years
#all_states = unique(ec$state1) # Replace with your actual list of states
all_elec <- unique(submit_subset$state_elec)
all_cat <- unique(submit_subset$Category)
grant_n_cycle <- expand.grid(grant_week = all_weeks, state_elec = all_elec,Category=all_cat)
grant_n_cycle <- left_join(grant_n_cycle,grant_n_subset,by=c("grant_week","state_elec","Category"))
elec_date <- ec %>% select(state_elec,elec_date) %>% distinct()
grant_n_cycle <- left_join(grant_n_cycle,elec_date,by=c("state_elec"))
#State
grant_n_cycle$state <- sub("\\..*$", "", grant_n_cycle$state_elec)
# Calculate new dates by adding weeks
grant_n_cycle$week_date <- grant_n_cycle$elec_date + weeks(grant_n_cycle$grant_week)
# Extract the year from the new dates
grant_n_cycle$grant_year <- year(grant_n_cycle$week_date)
#Replacing NAs
grant_n_cycle$count[is.na(grant_n_cycle$count)] <- 0
grant_n_cycle$pre <- ifelse(grant_n_cycle$grant_week>0,"Post","Pre")
t.test(grant_n_cycle$count~grant_n_cycle$pre)
grant_n_cycle$tau <- abs(grant_n_cycle$grant_week+100)
summary(grant_n_cycle$tau)
grant_n_cycle$tausq <- abs(grant_n_cycle$tau)^2
grant_n_cycle <- grant_n_cycle %>% filter(grant_year %in% c(2015:2023))
grant_cycle <- ec %>% filter(inrange(grant_week,-100,100)==T&time>0&Category_Simplified!="Other")
summary(grant_cycle$time)
grant_cycle$pre <- ifelse(grant_cycle$grant_week>0,"Post","Pre")
t.test(grant_cycle$time~grant_cycle$pre)
grant_cycle$tau <- abs(grant_cycle$grant_week+100)
summary(grant_cycle$tau)
grant_cycle$tausq <- abs(grant_cycle$tau)^2
#Distance - days/weeks from all elections
ec$pbc_submit_week1 <- as.duration(ec$submit_date - ec$res1)/dweeks(1)
ec$pbc_submit_week2 <- as.duration(ec$submit_date - ec$res2)/dweeks(1)
ec$pbc_submit_week3 <- as.duration(ec$submit_date - ec$res3)/dweeks(1)
summary(ec$pbc_submit_week3)
#Identifying closest election
ec <- ec %>% mutate(pbc_submit_week = case_when(inrange(pbc_submit_week1,0,270) ~ pbc_submit_week1, inrange(pbc_submit_week2,0,270) ~ pbc_submit_week2, inrange(pbc_submit_week3,0,270) ~ pbc_submit_week3))
summary(ec$pbc_submit_week)
#Round off week
ec$pbc_submit_week <- round(ec$pbc_submit_week,0)
##Adding election year for the closest delta
ec <- ec %>% mutate(elec_date = case_when(inrange(pbc_submit_week1,0,270) ~ as.Date(res1), inrange(pbc_submit_week2,0,270) ~ as.Date(res2), inrange(pbc_submit_week3,0,270) ~ as.Date(res3)))
##State election
ec$state_elec <- paste0(ec$state1,'.',year(ec$elec_date))
pbc_submit_subset <- ec %>% filter(Category_Simplified != "Other") %>% group_by(state1,pbc_submit_week,state_elec,Category_Simplified) %>% summarise(count=n(),Delisted=sum(Delisted),Sand=sum(Sand)) %>% rename(state=state1,Category=Category_Simplified)
all_weeks = 0:270  # Replace with your actual range of years
#all_states = unique(ec$state1) # Replace with your actual list of states
all_elec <- unique(ec$state_elec)
all_cat <- unique(pbc_submit_subset$Category)
pbc_submit_cycle <- expand.grid(pbc_submit_week = all_weeks, state_elec = all_elec,Category=all_cat)
pbc_submit_cycle <- left_join(pbc_submit_cycle,pbc_submit_subset,by=c("pbc_submit_week","state_elec","Category"))
elec_date <- ec %>% select(state_elec,elec_date) %>% distinct()
pbc_submit_cycle <-left_join(pbc_submit_cycle,elec_date,by=c("state_elec"))
#State
pbc_submit_cycle$state <- sub("\\..*$", "", pbc_submit_cycle$state_elec)
# Calculate new dates by adding weeks
pbc_submit_cycle$week_date <- pbc_submit_cycle$elec_date + weeks(pbc_submit_cycle$pbc_submit_week)
# Extract the year from the new dates
pbc_submit_cycle$submit_year <- year(pbc_submit_cycle$week_date)
# Replacing NAs
pbc_submit_cycle$count[is.na(pbc_submit_cycle$count)] <- 0
pbc_submit_cycle$Delisted[is.na(pbc_submit_cycle$Delisted)] <- 0
pbc_submit_cycle$Sand[is.na(pbc_submit_cycle$Sand)] <- 0
summary(pbc_submit_cycle$count)
summary(pbc_submit_cycle$Delisted)
summary(pbc_submit_cycle$Sand)
# Restricting to 2015 onwards
pbc_submit_cycle <- pbc_submit_cycle %>% filter(submit_year %in% c(2015:2024))
pbc_submit_cycle <- left_join(pbc_submit_cycle,next_elec,by="state_elec")
pbc_submit_cycle$next_elec <- ymd(pbc_submit_cycle$next_elec)
pbc_submit_cycle$check <- as.duration(pbc_submit_cycle$next_elec - pbc_submit_cycle$week_date)/dweeks(1)
pbc_submit_cycle$check[is.na(pbc_submit_cycle$check)] <- 0
pbc_submit_cycle <- pbc_submit_cycle %>% filter(check>=0)
pbc_submit_cycle$tau <- pbc_submit_cycle$pbc_submit_week
summary(pbc_submit_cycle$tau)
pbc_submit_cycle$tausq <- (pbc_submit_cycle$tau)^2
#write.csv(submit_cycle,paste0("C:/Users/",user,"/Desktop/submit.csv"))
ec$pbc_grant_week1 <- as.duration(ec$grant - ec$res1)/dweeks(1)
ec$pbc_grant_week2 <- as.duration(ec$grant - ec$res2)/dweeks(1)
ec$pbc_grant_week3 <- as.duration(ec$grant - ec$res3)/dweeks(1)
#Identifying closest election
ec <- ec %>% mutate(pbc_grant_week = case_when(inrange(pbc_grant_week1,0,270) ~ pbc_grant_week1, inrange(pbc_grant_week2,0,270) ~ pbc_grant_week2, inrange(pbc_grant_week3,0,270) ~ pbc_grant_week3))
summary(ec$pbc_grant_week)
#Round off week
ec$pbc_grant_week <- round(ec$pbc_grant_week,0)
##Adding election year for the closest delta
ec <- ec %>% mutate(elec_date = case_when(inrange(pbc_grant_week1,0,270) ~ as.Date(res1), inrange(pbc_grant_week2,0,270) ~ as.Date(res2), inrange(pbc_grant_week3,0,270) ~ as.Date(res3)))
##State election
ec$state_elec <- paste0(ec$state1,'.',year(ec$elec_date))
pbc_grant_n_subset <- ec %>% filter(Category_Simplified != 'Other') %>%  group_by(state1,pbc_grant_week,state_elec,Category_Simplified) %>% summarise(count=n(),Delisted=sum(Delisted),Sand=sum(Sand)) %>% rename(state=state1,Category=Category_Simplified)
all_weeks = 0:270  # Replace with your actual range of years
#all_states = unique(ec$state1) # Replace with your actual list of states
all_elec <- unique(pbc_grant_n_subset$state_elec)
all_cat <- unique(pbc_grant_n_subset$Category)
pbc_grant_n_cycle <- expand.grid(pbc_grant_week = all_weeks, state_elec = all_elec,Category = all_cat)
pbc_grant_n_cycle <- left_join(pbc_grant_n_cycle,pbc_grant_n_subset,by=c("pbc_grant_week","state_elec","Category"))
elec_date <- ec %>% select(state_elec,elec_date) %>% distinct()
pbc_grant_n_cycle <- left_join(pbc_grant_n_cycle,elec_date,by=c("state_elec"))
#State
pbc_grant_n_cycle$state <- sub("\\..*$", "", pbc_grant_n_cycle$state_elec)
# Calculate new dates by adding weeks
pbc_grant_n_cycle$week_date <- pbc_grant_n_cycle$elec_date + weeks(pbc_grant_n_cycle$pbc_grant_week)
# Extract the year from the new dates
pbc_grant_n_cycle$grant_year <- year(pbc_grant_n_cycle$week_date)
#Replacing NAs
pbc_grant_n_cycle$count[is.na(pbc_grant_n_cycle$count)] <- 0
pbc_grant_n_cycle$Delisted[is.na(pbc_grant_n_cycle$Delisted)] <- 0
pbc_grant_n_cycle$Sand[is.na(pbc_grant_n_cycle$Sand)] <- 0
pbc_grant_n_cycle$tau <- pbc_grant_n_cycle$pbc_grant_week
summary(pbc_grant_n_cycle$tau)
pbc_grant_n_cycle$tausq <- abs(pbc_grant_n_cycle$tau)^2
pbc_grant_n_cycle <- pbc_grant_n_cycle %>% filter(grant_year %in% c(2015:2024))
pbc_grant_n_cycle <- left_join(pbc_grant_n_cycle,next_elec,by="state_elec")
pbc_grant_n_cycle$next_elec <- ymd(pbc_grant_n_cycle$next_elec)
pbc_grant_n_cycle$check <- as.duration(pbc_grant_n_cycle$next_elec - pbc_grant_n_cycle$week_date)/dweeks(1)
pbc_grant_n_cycle$check[is.na(pbc_grant_n_cycle$check)] <- 0
pbc_grant_n_cycle <- pbc_grant_n_cycle %>% filter(check>=0)
pbc_submit_cycle$grant_date <- pbc_submit_cycle$week_date + 90
merge_submit <- pbc_submit_cycle %>% select(state_elec,grant_date,Category,count) %>% rename(count_submit = count)
pbc_grant_n_cycle$grant_date <- pbc_grant_n_cycle$week_date
pbc_grant_n_cycle$code <- interaction(pbc_grant_n_cycle$state_elec,pbc_grant_n_cycle$Category,pbc_grant_n_cycle$grant_date)
merge_submit$code <- interaction(merge_submit$state_elec,merge_submit$Category,merge_submit$grant_date)
#pbc_grant_n_cycle <- left_join(pbc_grant_n_cycle,merge_submit,by=c("state_elec","grant_date","Category"))
#test <- left_join(pbc_grant_n_cycle,merge_submit,by=c("state_elec","grant_date","Category"))
test <- left_join(pbc_grant_n_cycle,merge_submit,by=c("code"))
View(test)
merge_submit$code <- interaction(merge_submit$state_elec,merge_submit$Category)
pbc_grant_n_cycle$code <- interaction(pbc_grant_n_cycle$state_elec,pbc_grant_n_cycle$Category)
#pbc_grant_n_cycle <- left_join(pbc_grant_n_cycle,merge_submit,by=c("state_elec","grant_date","Category"))
test <- left_join(pbc_grant_n_cycle,merge_submit,by=c("code","grant_date"))
View(test)
View(merge_submit)
table(unique(merge_submit$code) %in% unique(pbc_grant_n_cycle$code))
View(merge_submit)
pbc_submit_cycle$code <- interaction(pbc_submit_cycle$state_elec,pbc_submit_cycle$Category)
merge_submit <- pbc_submit_cycle %>% select(code,grant_date) %>% rename(count_submit = count)
merge_submit <- pbc_submit_cycle %>% select(code,grant_date,count) %>% rename(count_submit = count)
View(merge_submit)
pbc_grant_n_cycle$grant_date <- pbc_grant_n_cycle$week_date
pbc_grant_n_cycle$code <- interaction(pbc_grant_n_cycle$state_elec,pbc_grant_n_cycle$Category)
#pbc_grant_n_cycle <- left_join(pbc_grant_n_cycle,merge_submit,by=c("state_elec","grant_date","Category"))
test <- left_join(pbc_grant_n_cycle,merge_submit,by=c("code","grant_date"))
#pbc_grant_n_cycle <- left_join(pbc_grant_n_cycle,merge_submit,by=c("state_elec","grant_date","Category"))
test <- left_join(pbc_grant_n_cycle,merge_submit,by=c("code","grant_date"))
sum(test$count_submit,na.rm = T)
View(test)
View(pbc_grant_n_cycle)
pbc_submit_cycle$grant_date <- pbc_submit_cycle$week_date + 90
View(pbc_submit_cycle)
pbc_submit_cycle$grant_date <- pbc_submit_cycle$week_date + 70
pbc_submit_cycle$code <- interaction(pbc_submit_cycle$state_elec,pbc_submit_cycle$Category)
merge_submit <- pbc_submit_cycle %>% select(code,grant_date,count) %>% rename(count_submit = count)
pbc_grant_n_cycle$grant_date <- pbc_grant_n_cycle$week_date
pbc_grant_n_cycle$code <- interaction(pbc_grant_n_cycle$state_elec,pbc_grant_n_cycle$Category)
#pbc_grant_n_cycle <- left_join(pbc_grant_n_cycle,merge_submit,by=c("state_elec","grant_date","Category"))
test <- left_join(pbc_grant_n_cycle,merge_submit,by=c("code","grant_date"))
sum(test$count_submit,na.rm = T)
pbc_submit_cycle$grant_date <- pbc_submit_cycle$week_date + 88
pbc_submit_cycle$code <- interaction(pbc_submit_cycle$state_elec,pbc_submit_cycle$Category)
merge_submit <- pbc_submit_cycle %>% select(code,grant_date,count) %>% rename(count_submit = count)
pbc_grant_n_cycle$grant_date <- pbc_grant_n_cycle$week_date
pbc_grant_n_cycle$code <- interaction(pbc_grant_n_cycle$state_elec,pbc_grant_n_cycle$Category)
#pbc_grant_n_cycle <- left_join(pbc_grant_n_cycle,merge_submit,by=c("state_elec","grant_date","Category"))
test <- left_join(pbc_grant_n_cycle,merge_submit,by=c("code","grant_date"))
#test <- left_join(pbc_grant_n_cycle,merge_submit,by=c("code"))
sum(test$count_submit,na.rm = T)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
library(data.table)
library(sf)
library(tidyverse)
library(cowplot)
library(patchwork)
library(lfe)
library(expss)
library(lubridate)
library(zoo)
library(data.table)
#user <- "agnihotri"
user <- "prana"
#user <- "hp"
#ec<-read.csv(paste0("C:/Users/",user,"/Dropbox/agnihotri_gupta/Environment_Clearance/EC_All_States.csv"),
#             stringsAsFactors = F)
ec<-readRDS(paste0("C:/Users/",user,"/Dropbox/agnihotri_gupta/Environment_Clearance/EC_All_States.rds"))
next_elec <- read.csv(paste0("C:/Users/",user,"/Dropbox/agnihotri_gupta/Environment_Clearance/next_elec.csv"))
#submit_subset <- ec %>% filter(Category_Simplified=='Non-Coal Mining') %>% filter(inrange(submit_week,-100,100)==T) %>% group_by(state1,submit_week,state_elec) %>% summarise(count=n(), delisted=sum(Delisted)) %>% rename(state=state1)
submit_subset <- ec %>% filter(inrange(submit_week,-100,100)==T & Category_Simplified != "Other") %>% group_by(state1,submit_week,state_elec,Category_Simplified) %>% summarise(count=n(), delisted=sum(Delisted)) %>% rename(state=state1,Category=Category_Simplified)
submit_subset<-submit_subset%>%mutate(delisted_percent=delisted/count)
all_weeks = -100:100  # Replace with your actual range of years
all_elec <- unique(submit_subset$state_elec)
all_cat <- unique(submit_subset$Category)
submit_cycle <- expand.grid(submit_week = all_weeks, state_elec = all_elec,Category=all_cat)
submit_cycle <- left_join(submit_cycle,submit_subset,by=c("submit_week","state_elec","Category"))
elec_date <- ec %>% select(state_elec,elec_date) %>% distinct()
submit_cycle <- left_join(submit_cycle,elec_date,by=c("state_elec"))
#State
submit_cycle$state <- sub("\\..*$", "", submit_cycle$state_elec)
# Calculate new dates by adding weeks
submit_cycle$week_date <- submit_cycle$elec_date + weeks(submit_cycle$submit_week)
# Extract the year from the new dates
submit_cycle$submit_year <- year(submit_cycle$week_date)
# Replacing NAs
submit_cycle$count[is.na(submit_cycle$count)] <- 0
summary(submit_cycle$count)
submit_cycle$delisted[is.na(submit_cycle$delisted)] <- 0
summary(submit_cycle$delisted)
submit_cycle$delisted_percent[is.na(submit_cycle$delisted_percent)] <- 0
summary(submit_cycle$delisted_percent)
# Restricting to 2015 onwards
submit_cycle <- submit_cycle %>% filter(submit_year %in% c(2015:2023))
submit_cycle$tau <- abs(submit_cycle$submit_week+100)
summary(submit_cycle$tau)
submit_cycle$tausq <- abs(submit_cycle$tau)^2
grant_n_subset <- ec %>% filter(inrange(grant_week,-100,100)==T & Category_Simplified != "Other") %>% group_by(state1,grant_week,state_elec,Category_Simplified) %>% summarise(count=n()) %>% rename(state=state1,Category=Category_Simplified)
all_weeks = -100:100  # Replace with your actual range of years
#all_states = unique(ec$state1) # Replace with your actual list of states
all_elec <- unique(submit_subset$state_elec)
all_cat <- unique(submit_subset$Category)
grant_n_cycle <- expand.grid(grant_week = all_weeks, state_elec = all_elec,Category=all_cat)
grant_n_cycle <- left_join(grant_n_cycle,grant_n_subset,by=c("grant_week","state_elec","Category"))
elec_date <- ec %>% select(state_elec,elec_date) %>% distinct()
grant_n_cycle <- left_join(grant_n_cycle,elec_date,by=c("state_elec"))
#State
grant_n_cycle$state <- sub("\\..*$", "", grant_n_cycle$state_elec)
# Calculate new dates by adding weeks
grant_n_cycle$week_date <- grant_n_cycle$elec_date + weeks(grant_n_cycle$grant_week)
# Extract the year from the new dates
grant_n_cycle$grant_year <- year(grant_n_cycle$week_date)
#Replacing NAs
grant_n_cycle$count[is.na(grant_n_cycle$count)] <- 0
grant_n_cycle$pre <- ifelse(grant_n_cycle$grant_week>0,"Post","Pre")
t.test(grant_n_cycle$count~grant_n_cycle$pre)
grant_n_cycle$tau <- abs(grant_n_cycle$grant_week+100)
summary(grant_n_cycle$tau)
grant_n_cycle$tausq <- abs(grant_n_cycle$tau)^2
grant_n_cycle <- grant_n_cycle %>% filter(grant_year %in% c(2015:2023))
grant_cycle <- ec %>% filter(inrange(grant_week,-100,100)==T&time>0&Category_Simplified!="Other")
summary(grant_cycle$time)
grant_cycle$pre <- ifelse(grant_cycle$grant_week>0,"Post","Pre")
t.test(grant_cycle$time~grant_cycle$pre)
grant_cycle$tau <- abs(grant_cycle$grant_week+100)
summary(grant_cycle$tau)
grant_cycle$tausq <- abs(grant_cycle$tau)^2
#Distance - days/weeks from all elections
ec$pbc_submit_week1 <- as.duration(ec$submit_date - ec$res1)/dweeks(1)
ec$pbc_submit_week2 <- as.duration(ec$submit_date - ec$res2)/dweeks(1)
ec$pbc_submit_week3 <- as.duration(ec$submit_date - ec$res3)/dweeks(1)
summary(ec$pbc_submit_week3)
#Identifying closest election
ec <- ec %>% mutate(pbc_submit_week = case_when(inrange(pbc_submit_week1,0,270) ~ pbc_submit_week1, inrange(pbc_submit_week2,0,270) ~ pbc_submit_week2, inrange(pbc_submit_week3,0,270) ~ pbc_submit_week3))
summary(ec$pbc_submit_week)
#Round off week
ec$pbc_submit_week <- round(ec$pbc_submit_week,0)
##Adding election year for the closest delta
ec <- ec %>% mutate(elec_date = case_when(inrange(pbc_submit_week1,0,270) ~ as.Date(res1), inrange(pbc_submit_week2,0,270) ~ as.Date(res2), inrange(pbc_submit_week3,0,270) ~ as.Date(res3)))
##State election
ec$state_elec <- paste0(ec$state1,'.',year(ec$elec_date))
pbc_submit_subset <- ec %>% filter(Category_Simplified != "Other") %>% group_by(state1,pbc_submit_week,state_elec,Category_Simplified) %>% summarise(count=n(),Delisted=sum(Delisted),Sand=sum(Sand)) %>% rename(state=state1,Category=Category_Simplified)
all_weeks = 0:270  # Replace with your actual range of years
#all_states = unique(ec$state1) # Replace with your actual list of states
all_elec <- unique(ec$state_elec)
all_cat <- unique(pbc_submit_subset$Category)
pbc_submit_cycle <- expand.grid(pbc_submit_week = all_weeks, state_elec = all_elec,Category=all_cat)
pbc_submit_cycle <- left_join(pbc_submit_cycle,pbc_submit_subset,by=c("pbc_submit_week","state_elec","Category"))
elec_date <- ec %>% select(state_elec,elec_date) %>% distinct()
pbc_submit_cycle <-left_join(pbc_submit_cycle,elec_date,by=c("state_elec"))
#State
pbc_submit_cycle$state <- sub("\\..*$", "", pbc_submit_cycle$state_elec)
# Calculate new dates by adding weeks
pbc_submit_cycle$week_date <- pbc_submit_cycle$elec_date + weeks(pbc_submit_cycle$pbc_submit_week)
# Extract the year from the new dates
pbc_submit_cycle$submit_year <- year(pbc_submit_cycle$week_date)
# Replacing NAs
pbc_submit_cycle$count[is.na(pbc_submit_cycle$count)] <- 0
pbc_submit_cycle$Delisted[is.na(pbc_submit_cycle$Delisted)] <- 0
pbc_submit_cycle$Sand[is.na(pbc_submit_cycle$Sand)] <- 0
summary(pbc_submit_cycle$count)
summary(pbc_submit_cycle$Delisted)
summary(pbc_submit_cycle$Sand)
# Restricting to 2015 onwards
pbc_submit_cycle <- pbc_submit_cycle %>% filter(submit_year %in% c(2015:2024))
pbc_submit_cycle <- left_join(pbc_submit_cycle,next_elec,by="state_elec")
pbc_submit_cycle$next_elec <- ymd(pbc_submit_cycle$next_elec)
pbc_submit_cycle$check <- as.duration(pbc_submit_cycle$next_elec - pbc_submit_cycle$week_date)/dweeks(1)
pbc_submit_cycle$check[is.na(pbc_submit_cycle$check)] <- 0
pbc_submit_cycle <- pbc_submit_cycle %>% filter(check>=0)
pbc_submit_cycle$tau <- pbc_submit_cycle$pbc_submit_week
summary(pbc_submit_cycle$tau)
pbc_submit_cycle$tausq <- (pbc_submit_cycle$tau)^2
#write.csv(submit_cycle,paste0("C:/Users/",user,"/Desktop/submit.csv"))
ec$pbc_grant_week1 <- as.duration(ec$grant - ec$res1)/dweeks(1)
ec$pbc_grant_week2 <- as.duration(ec$grant - ec$res2)/dweeks(1)
ec$pbc_grant_week3 <- as.duration(ec$grant - ec$res3)/dweeks(1)
#Identifying closest election
ec <- ec %>% mutate(pbc_grant_week = case_when(inrange(pbc_grant_week1,0,270) ~ pbc_grant_week1, inrange(pbc_grant_week2,0,270) ~ pbc_grant_week2, inrange(pbc_grant_week3,0,270) ~ pbc_grant_week3))
summary(ec$pbc_grant_week)
#Round off week
ec$pbc_grant_week <- round(ec$pbc_grant_week,0)
##Adding election year for the closest delta
ec <- ec %>% mutate(elec_date = case_when(inrange(pbc_grant_week1,0,270) ~ as.Date(res1), inrange(pbc_grant_week2,0,270) ~ as.Date(res2), inrange(pbc_grant_week3,0,270) ~ as.Date(res3)))
##State election
ec$state_elec <- paste0(ec$state1,'.',year(ec$elec_date))
pbc_grant_n_subset <- ec %>% filter(Category_Simplified != 'Other') %>%  group_by(state1,pbc_grant_week,state_elec,Category_Simplified) %>% summarise(count=n(),Delisted=sum(Delisted),Sand=sum(Sand)) %>% rename(state=state1,Category=Category_Simplified)
all_weeks = 0:270  # Replace with your actual range of years
#all_states = unique(ec$state1) # Replace with your actual list of states
all_elec <- unique(pbc_grant_n_subset$state_elec)
all_cat <- unique(pbc_grant_n_subset$Category)
pbc_grant_n_cycle <- expand.grid(pbc_grant_week = all_weeks, state_elec = all_elec,Category = all_cat)
pbc_grant_n_cycle <- left_join(pbc_grant_n_cycle,pbc_grant_n_subset,by=c("pbc_grant_week","state_elec","Category"))
elec_date <- ec %>% select(state_elec,elec_date) %>% distinct()
pbc_grant_n_cycle <- left_join(pbc_grant_n_cycle,elec_date,by=c("state_elec"))
#State
pbc_grant_n_cycle$state <- sub("\\..*$", "", pbc_grant_n_cycle$state_elec)
# Calculate new dates by adding weeks
pbc_grant_n_cycle$week_date <- pbc_grant_n_cycle$elec_date + weeks(pbc_grant_n_cycle$pbc_grant_week)
# Extract the year from the new dates
pbc_grant_n_cycle$grant_year <- year(pbc_grant_n_cycle$week_date)
#Replacing NAs
pbc_grant_n_cycle$count[is.na(pbc_grant_n_cycle$count)] <- 0
pbc_grant_n_cycle$Delisted[is.na(pbc_grant_n_cycle$Delisted)] <- 0
pbc_grant_n_cycle$Sand[is.na(pbc_grant_n_cycle$Sand)] <- 0
pbc_grant_n_cycle$tau <- pbc_grant_n_cycle$pbc_grant_week
summary(pbc_grant_n_cycle$tau)
pbc_grant_n_cycle$tausq <- abs(pbc_grant_n_cycle$tau)^2
pbc_grant_n_cycle <- pbc_grant_n_cycle %>% filter(grant_year %in% c(2015:2024))
pbc_grant_n_cycle <- left_join(pbc_grant_n_cycle,next_elec,by="state_elec")
pbc_grant_n_cycle$next_elec <- ymd(pbc_grant_n_cycle$next_elec)
pbc_grant_n_cycle$check <- as.duration(pbc_grant_n_cycle$next_elec - pbc_grant_n_cycle$week_date)/dweeks(1)
pbc_grant_n_cycle$check[is.na(pbc_grant_n_cycle$check)] <- 0
pbc_grant_n_cycle <- pbc_grant_n_cycle %>% filter(check>=0)
pbc_submit_cycle$grant_date <- pbc_submit_cycle$week_date + 91
pbc_submit_cycle$code <- interaction(pbc_submit_cycle$state_elec,pbc_submit_cycle$Category)
merge_submit <- pbc_submit_cycle %>% select(code,grant_date,count) %>% rename(count_submit = count)
pbc_grant_n_cycle$grant_date <- pbc_grant_n_cycle$week_date
pbc_grant_n_cycle$code <- interaction(pbc_grant_n_cycle$state_elec,pbc_grant_n_cycle$Category)
#pbc_grant_n_cycle <- left_join(pbc_grant_n_cycle,merge_submit,by=c("state_elec","grant_date","Category"))
test <- left_join(pbc_grant_n_cycle,merge_submit,by=c("code","grant_date"))
#test <- left_join(pbc_grant_n_cycle,merge_submit,by=c("code"))
sum(test$count_submit,na.rm = T)
mod1_grant <- felm(count~tau+tausq+Category+count_submit|state+grant_year|0|0,data=pbc_grant_n_cycle)
#pbc_grant_n_cycle <- left_join(pbc_grant_n_cycle,merge_submit,by=c("state_elec","grant_date","Category"))
pbc_grant_n_cycle <- left_join(pbc_grant_n_cycle,merge_submit,by=c("code","grant_date"))
sum(pbc_grant_n_cycle$count_submit,na.rm = T)
mod1_grant <- felm(count~tau+tausq+Category+count_submit|state+grant_year|0|0,data=pbc_grant_n_cycle)
summary(mod1)
mod1_grant <- felm(count~tau+tausq+Category+count_submit|state+grant_year|0|0,data=pbc_grant_n_cycle)
summary(mod1_grant)
mod2_grant <- felm(count~tau+tausq|state+grant_year+count_submit|0|0,data=pbc_grant_n_cycle,subset = Category== "Non-Coal Mining")
summary(mod2_grant)
mod3_grant <- felm(count~tau+tausq|state+grant_year+count_submit|0|0,data=pbc_grant_n_cycle,subset = Category== "Industrial")
summary(mod3_grant)
mod4_grant <- felm(count~tau+tausq|state+grant_year+count_submit|0|0,data=pbc_grant_n_cycle,subset = Category== "Infrastructure")
summary(mod4_grant)
#stargazer(mod1,mod2,type = 'latex', title = "Political Business Cycle in Clearances Granted",
#        add.lines = list(c("Sample", "Full", "Non-Coal Mining"))
#,out = "C:/Users/prana/Dropbox/Apps/Overleaf/Political_Economy_Environment_Clearances/Tables/pbc_grant.tex")
stargazer(mod1_grant,mod2_grant,mod3_grant,mod4_grant,type = 'latex', title = "Political Business Cycle in Clearances Granted",
covariate.labels = c('Weeks From Election','From Election Squared','Infrastructure',"Non-Coal Mining"),
add.lines = list(c("Sample", "Full", "Non-Coal Mining","Industrial","Infrastructure"),
c("State FE","Yes","Yes","Yes","Yes"),
c("Year FE","Yes","Yes","Yes","Yes")),
dep.var.caption = "Number of Applications Granted (Count)",
no.space = TRUE,
font.size = "footnotesize",
label = 'grant_cycle',
notes = "Observations aggregated to the week from election level. Each observarion is state-week-category",
out = paste0("C:/Users/",user,"/Dropbox/Apps/Overleaf/Political_Economy_Environment_Clearances/Tables/pbc_grant.tex"))
mod1_grant <- felm(count~tau+tausq+Category+count_submit|state+grant_year|0|0,data=pbc_grant_n_cycle)
summary(mod1_grant)
mod2_grant <- felm(count~tau+tausq+count_submit|state+grant_year|0|0,data=pbc_grant_n_cycle,subset = Category== "Non-Coal Mining")
summary(mod2_grant)
mod3_grant <- felm(count~tau+tausq+count_submit|state+grant_year|0|0,data=pbc_grant_n_cycle,subset = Category== "Industrial")
summary(mod3_grant)
mod4_grant <- felm(count~tau+tausq+count_submit|state+grant_year|0|0,data=pbc_grant_n_cycle,subset = Category== "Infrastructure")
summary(mod4_grant)
#stargazer(mod1,mod2,type = 'latex', title = "Political Business Cycle in Clearances Granted",
#        add.lines = list(c("Sample", "Full", "Non-Coal Mining"))
#,out = "C:/Users/prana/Dropbox/Apps/Overleaf/Political_Economy_Environment_Clearances/Tables/pbc_grant.tex")
stargazer(mod1_grant,mod2_grant,mod3_grant,mod4_grant,type = 'latex', title = "Political Business Cycle in Clearances Granted",
covariate.labels = c('Weeks From Election','From Election Squared','Infrastructure',"Non-Coal Mining"),
add.lines = list(c("Sample", "Full", "Non-Coal Mining","Industrial","Infrastructure"),
c("State FE","Yes","Yes","Yes","Yes"),
c("Year FE","Yes","Yes","Yes","Yes")),
dep.var.caption = "Number of Applications Granted (Count)",
no.space = TRUE,
font.size = "footnotesize",
label = 'grant_cycle',
notes = "Observations aggregated to the week from election level. Each observarion is state-week-category",
out = paste0("C:/Users/",user,"/Dropbox/Apps/Overleaf/Political_Economy_Environment_Clearances/Tables/pbc_grant.tex"))
